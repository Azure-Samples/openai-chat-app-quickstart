{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "metadata": {
    "_generator": {
      "name": "bicep",
      "version": "0.36.1.42791",
      "templateHash": "6906868840490935382"
    },
    "description": "Creates an Azure Container Registry and an Azure Container Apps environment."
  },
  "parameters": {
    "name": {
      "type": "string"
    },
    "location": {
      "type": "string",
      "defaultValue": "[resourceGroup().location]"
    },
    "tags": {
      "type": "object",
      "defaultValue": {}
    },
    "containerAppsEnvironmentName": {
      "type": "string"
    },
    "containerRegistryName": {
      "type": "string"
    },
    "containerRegistryResourceGroupName": {
      "type": "string",
      "defaultValue": ""
    },
    "containerRegistryAdminUserEnabled": {
      "type": "bool",
      "defaultValue": false
    },
    "logAnalyticsWorkspaceName": {
      "type": "string"
    },
    "applicationInsightsName": {
      "type": "string",
      "defaultValue": ""
    },
    "daprEnabled": {
      "type": "bool",
      "defaultValue": false
    }
  },
  "resources": [
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "[format('{0}-container-apps-environment', parameters('name'))]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "name": {
            "value": "[parameters('containerAppsEnvironmentName')]"
          },
          "location": {
            "value": "[parameters('location')]"
          },
          "tags": {
            "value": "[parameters('tags')]"
          },
          "logAnalyticsWorkspaceName": {
            "value": "[parameters('logAnalyticsWorkspaceName')]"
          },
          "applicationInsightsName": {
            "value": "[parameters('applicationInsightsName')]"
          },
          "daprEnabled": {
            "value": "[parameters('daprEnabled')]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.36.1.42791",
              "templateHash": "13665153796666771230"
            },
            "description": "Creates an Azure Container Apps environment."
          },
          "parameters": {
            "name": {
              "type": "string"
            },
            "location": {
              "type": "string",
              "defaultValue": "[resourceGroup().location]"
            },
            "tags": {
              "type": "object",
              "defaultValue": {}
            },
            "applicationInsightsName": {
              "type": "string",
              "defaultValue": "",
              "metadata": {
                "description": "Name of the Application Insights resource"
              }
            },
            "daprEnabled": {
              "type": "bool",
              "defaultValue": false,
              "metadata": {
                "description": "Specifies if Dapr is enabled"
              }
            },
            "logAnalyticsWorkspaceName": {
              "type": "string",
              "metadata": {
                "description": "Name of the Log Analytics workspace"
              }
            }
          },
          "resources": [
            {
              "type": "Microsoft.App/managedEnvironments",
              "apiVersion": "2023-05-01",
              "name": "[parameters('name')]",
              "location": "[parameters('location')]",
              "tags": "[parameters('tags')]",
              "properties": {
                "appLogsConfiguration": {
                  "destination": "log-analytics",
                  "logAnalyticsConfiguration": {
                    "customerId": "[reference(resourceId('Microsoft.OperationalInsights/workspaces', parameters('logAnalyticsWorkspaceName')), '2022-10-01').customerId]",
                    "sharedKey": "[listKeys(resourceId('Microsoft.OperationalInsights/workspaces', parameters('logAnalyticsWorkspaceName')), '2022-10-01').primarySharedKey]"
                  }
                },
                "daprAIInstrumentationKey": "[if(and(parameters('daprEnabled'), not(empty(parameters('applicationInsightsName')))), reference(resourceId('Microsoft.Insights/components', parameters('applicationInsightsName')), '2020-02-02').InstrumentationKey, '')]"
              }
            }
          ],
          "outputs": {
            "defaultDomain": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.App/managedEnvironments', parameters('name')), '2023-05-01').defaultDomain]"
            },
            "id": {
              "type": "string",
              "value": "[resourceId('Microsoft.App/managedEnvironments', parameters('name'))]"
            },
            "name": {
              "type": "string",
              "value": "[parameters('name')]"
            }
          }
        }
      }
    },
    {
      "condition": "[empty(parameters('containerRegistryResourceGroupName'))]",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "[format('{0}-container-registry', parameters('name'))]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "name": {
            "value": "[parameters('containerRegistryName')]"
          },
          "location": {
            "value": "[parameters('location')]"
          },
          "adminUserEnabled": {
            "value": "[parameters('containerRegistryAdminUserEnabled')]"
          },
          "tags": {
            "value": "[parameters('tags')]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.36.1.42791",
              "templateHash": "9654395135941658248"
            },
            "description": "Creates an Azure Container Registry."
          },
          "parameters": {
            "name": {
              "type": "string"
            },
            "location": {
              "type": "string",
              "defaultValue": "[resourceGroup().location]"
            },
            "tags": {
              "type": "object",
              "defaultValue": {}
            },
            "adminUserEnabled": {
              "type": "bool",
              "defaultValue": false,
              "metadata": {
                "description": "Indicates whether admin user is enabled"
              }
            },
            "anonymousPullEnabled": {
              "type": "bool",
              "defaultValue": false,
              "metadata": {
                "description": "Indicates whether anonymous pull is enabled"
              }
            },
            "azureADAuthenticationAsArmPolicy": {
              "type": "object",
              "defaultValue": {
                "status": "enabled"
              },
              "metadata": {
                "description": "Azure ad authentication as arm policy settings"
              }
            },
            "dataEndpointEnabled": {
              "type": "bool",
              "defaultValue": false,
              "metadata": {
                "description": "Indicates whether data endpoint is enabled"
              }
            },
            "encryption": {
              "type": "object",
              "defaultValue": {
                "status": "disabled"
              },
              "metadata": {
                "description": "Encryption settings"
              }
            },
            "exportPolicy": {
              "type": "object",
              "defaultValue": {
                "status": "enabled"
              },
              "metadata": {
                "description": "Export policy settings"
              }
            },
            "metadataSearch": {
              "type": "string",
              "defaultValue": "Disabled",
              "metadata": {
                "description": "Metadata search settings"
              }
            },
            "networkRuleBypassOptions": {
              "type": "string",
              "defaultValue": "AzureServices",
              "metadata": {
                "description": "Options for bypassing network rules"
              }
            },
            "publicNetworkAccess": {
              "type": "string",
              "defaultValue": "Enabled",
              "metadata": {
                "description": "Public network access setting"
              }
            },
            "quarantinePolicy": {
              "type": "object",
              "defaultValue": {
                "status": "disabled"
              },
              "metadata": {
                "description": "Quarantine policy settings"
              }
            },
            "retentionPolicy": {
              "type": "object",
              "defaultValue": {
                "days": 7,
                "status": "disabled"
              },
              "metadata": {
                "description": "Retention policy settings"
              }
            },
            "scopeMaps": {
              "type": "array",
              "defaultValue": [],
              "metadata": {
                "description": "Scope maps setting"
              }
            },
            "sku": {
              "type": "object",
              "defaultValue": {
                "name": "Basic"
              },
              "metadata": {
                "description": "SKU settings"
              }
            },
            "softDeletePolicy": {
              "type": "object",
              "defaultValue": {
                "retentionDays": 7,
                "status": "disabled"
              },
              "metadata": {
                "description": "Soft delete policy settings"
              }
            },
            "trustPolicy": {
              "type": "object",
              "defaultValue": {
                "type": "Notary",
                "status": "disabled"
              },
              "metadata": {
                "description": "Trust policy settings"
              }
            },
            "zoneRedundancy": {
              "type": "string",
              "defaultValue": "Disabled",
              "metadata": {
                "description": "Zone redundancy setting"
              }
            },
            "workspaceId": {
              "type": "string",
              "defaultValue": "",
              "metadata": {
                "description": "The log analytics workspace ID used for logging and monitoring"
              }
            }
          },
          "resources": [
            {
              "copy": {
                "name": "containerRegistry::scopeMap",
                "count": "[length(parameters('scopeMaps'))]"
              },
              "type": "Microsoft.ContainerRegistry/registries/scopeMaps",
              "apiVersion": "2023-11-01-preview",
              "name": "[format('{0}/{1}', parameters('name'), parameters('scopeMaps')[copyIndex()].name)]",
              "properties": "[parameters('scopeMaps')[copyIndex()].properties]",
              "dependsOn": [
                "[resourceId('Microsoft.ContainerRegistry/registries', parameters('name'))]"
              ]
            },
            {
              "type": "Microsoft.ContainerRegistry/registries",
              "apiVersion": "2023-11-01-preview",
              "name": "[parameters('name')]",
              "location": "[parameters('location')]",
              "tags": "[parameters('tags')]",
              "sku": "[parameters('sku')]",
              "properties": {
                "adminUserEnabled": "[parameters('adminUserEnabled')]",
                "anonymousPullEnabled": "[parameters('anonymousPullEnabled')]",
                "dataEndpointEnabled": "[parameters('dataEndpointEnabled')]",
                "encryption": "[parameters('encryption')]",
                "metadataSearch": "[parameters('metadataSearch')]",
                "networkRuleBypassOptions": "[parameters('networkRuleBypassOptions')]",
                "policies": {
                  "quarantinePolicy": "[parameters('quarantinePolicy')]",
                  "trustPolicy": "[parameters('trustPolicy')]",
                  "retentionPolicy": "[parameters('retentionPolicy')]",
                  "exportPolicy": "[parameters('exportPolicy')]",
                  "azureADAuthenticationAsArmPolicy": "[parameters('azureADAuthenticationAsArmPolicy')]",
                  "softDeletePolicy": "[parameters('softDeletePolicy')]"
                },
                "publicNetworkAccess": "[parameters('publicNetworkAccess')]",
                "zoneRedundancy": "[parameters('zoneRedundancy')]"
              }
            },
            {
              "condition": "[not(empty(parameters('workspaceId')))]",
              "type": "Microsoft.Insights/diagnosticSettings",
              "apiVersion": "2021-05-01-preview",
              "scope": "[format('Microsoft.ContainerRegistry/registries/{0}', parameters('name'))]",
              "name": "registry-diagnostics",
              "properties": {
                "workspaceId": "[parameters('workspaceId')]",
                "logs": [
                  {
                    "category": "ContainerRegistryRepositoryEvents",
                    "enabled": true
                  },
                  {
                    "category": "ContainerRegistryLoginEvents",
                    "enabled": true
                  }
                ],
                "metrics": [
                  {
                    "category": "AllMetrics",
                    "enabled": true,
                    "timeGrain": "PT1M"
                  }
                ]
              },
              "dependsOn": [
                "[resourceId('Microsoft.ContainerRegistry/registries', parameters('name'))]"
              ]
            }
          ],
          "outputs": {
            "id": {
              "type": "string",
              "value": "[resourceId('Microsoft.ContainerRegistry/registries', parameters('name'))]"
            },
            "loginServer": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.ContainerRegistry/registries', parameters('name')), '2023-11-01-preview').loginServer]"
            },
            "name": {
              "type": "string",
              "value": "[parameters('name')]"
            }
          }
        }
      }
    },
    {
      "condition": "[not(empty(parameters('containerRegistryResourceGroupName')))]",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "[format('{0}-container-registry-external', parameters('name'))]",
      "resourceGroup": "[parameters('containerRegistryResourceGroupName')]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "name": {
            "value": "[parameters('containerRegistryName')]"
          },
          "location": {
            "value": "[parameters('location')]"
          },
          "adminUserEnabled": {
            "value": "[parameters('containerRegistryAdminUserEnabled')]"
          },
          "tags": {
            "value": "[parameters('tags')]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.36.1.42791",
              "templateHash": "9654395135941658248"
            },
            "description": "Creates an Azure Container Registry."
          },
          "parameters": {
            "name": {
              "type": "string"
            },
            "location": {
              "type": "string",
              "defaultValue": "[resourceGroup().location]"
            },
            "tags": {
              "type": "object",
              "defaultValue": {}
            },
            "adminUserEnabled": {
              "type": "bool",
              "defaultValue": false,
              "metadata": {
                "description": "Indicates whether admin user is enabled"
              }
            },
            "anonymousPullEnabled": {
              "type": "bool",
              "defaultValue": false,
              "metadata": {
                "description": "Indicates whether anonymous pull is enabled"
              }
            },
            "azureADAuthenticationAsArmPolicy": {
              "type": "object",
              "defaultValue": {
                "status": "enabled"
              },
              "metadata": {
                "description": "Azure ad authentication as arm policy settings"
              }
            },
            "dataEndpointEnabled": {
              "type": "bool",
              "defaultValue": false,
              "metadata": {
                "description": "Indicates whether data endpoint is enabled"
              }
            },
            "encryption": {
              "type": "object",
              "defaultValue": {
                "status": "disabled"
              },
              "metadata": {
                "description": "Encryption settings"
              }
            },
            "exportPolicy": {
              "type": "object",
              "defaultValue": {
                "status": "enabled"
              },
              "metadata": {
                "description": "Export policy settings"
              }
            },
            "metadataSearch": {
              "type": "string",
              "defaultValue": "Disabled",
              "metadata": {
                "description": "Metadata search settings"
              }
            },
            "networkRuleBypassOptions": {
              "type": "string",
              "defaultValue": "AzureServices",
              "metadata": {
                "description": "Options for bypassing network rules"
              }
            },
            "publicNetworkAccess": {
              "type": "string",
              "defaultValue": "Enabled",
              "metadata": {
                "description": "Public network access setting"
              }
            },
            "quarantinePolicy": {
              "type": "object",
              "defaultValue": {
                "status": "disabled"
              },
              "metadata": {
                "description": "Quarantine policy settings"
              }
            },
            "retentionPolicy": {
              "type": "object",
              "defaultValue": {
                "days": 7,
                "status": "disabled"
              },
              "metadata": {
                "description": "Retention policy settings"
              }
            },
            "scopeMaps": {
              "type": "array",
              "defaultValue": [],
              "metadata": {
                "description": "Scope maps setting"
              }
            },
            "sku": {
              "type": "object",
              "defaultValue": {
                "name": "Basic"
              },
              "metadata": {
                "description": "SKU settings"
              }
            },
            "softDeletePolicy": {
              "type": "object",
              "defaultValue": {
                "retentionDays": 7,
                "status": "disabled"
              },
              "metadata": {
                "description": "Soft delete policy settings"
              }
            },
            "trustPolicy": {
              "type": "object",
              "defaultValue": {
                "type": "Notary",
                "status": "disabled"
              },
              "metadata": {
                "description": "Trust policy settings"
              }
            },
            "zoneRedundancy": {
              "type": "string",
              "defaultValue": "Disabled",
              "metadata": {
                "description": "Zone redundancy setting"
              }
            },
            "workspaceId": {
              "type": "string",
              "defaultValue": "",
              "metadata": {
                "description": "The log analytics workspace ID used for logging and monitoring"
              }
            }
          },
          "resources": [
            {
              "copy": {
                "name": "containerRegistry::scopeMap",
                "count": "[length(parameters('scopeMaps'))]"
              },
              "type": "Microsoft.ContainerRegistry/registries/scopeMaps",
              "apiVersion": "2023-11-01-preview",
              "name": "[format('{0}/{1}', parameters('name'), parameters('scopeMaps')[copyIndex()].name)]",
              "properties": "[parameters('scopeMaps')[copyIndex()].properties]",
              "dependsOn": [
                "[resourceId('Microsoft.ContainerRegistry/registries', parameters('name'))]"
              ]
            },
            {
              "type": "Microsoft.ContainerRegistry/registries",
              "apiVersion": "2023-11-01-preview",
              "name": "[parameters('name')]",
              "location": "[parameters('location')]",
              "tags": "[parameters('tags')]",
              "sku": "[parameters('sku')]",
              "properties": {
                "adminUserEnabled": "[parameters('adminUserEnabled')]",
                "anonymousPullEnabled": "[parameters('anonymousPullEnabled')]",
                "dataEndpointEnabled": "[parameters('dataEndpointEnabled')]",
                "encryption": "[parameters('encryption')]",
                "metadataSearch": "[parameters('metadataSearch')]",
                "networkRuleBypassOptions": "[parameters('networkRuleBypassOptions')]",
                "policies": {
                  "quarantinePolicy": "[parameters('quarantinePolicy')]",
                  "trustPolicy": "[parameters('trustPolicy')]",
                  "retentionPolicy": "[parameters('retentionPolicy')]",
                  "exportPolicy": "[parameters('exportPolicy')]",
                  "azureADAuthenticationAsArmPolicy": "[parameters('azureADAuthenticationAsArmPolicy')]",
                  "softDeletePolicy": "[parameters('softDeletePolicy')]"
                },
                "publicNetworkAccess": "[parameters('publicNetworkAccess')]",
                "zoneRedundancy": "[parameters('zoneRedundancy')]"
              }
            },
            {
              "condition": "[not(empty(parameters('workspaceId')))]",
              "type": "Microsoft.Insights/diagnosticSettings",
              "apiVersion": "2021-05-01-preview",
              "scope": "[format('Microsoft.ContainerRegistry/registries/{0}', parameters('name'))]",
              "name": "registry-diagnostics",
              "properties": {
                "workspaceId": "[parameters('workspaceId')]",
                "logs": [
                  {
                    "category": "ContainerRegistryRepositoryEvents",
                    "enabled": true
                  },
                  {
                    "category": "ContainerRegistryLoginEvents",
                    "enabled": true
                  }
                ],
                "metrics": [
                  {
                    "category": "AllMetrics",
                    "enabled": true,
                    "timeGrain": "PT1M"
                  }
                ]
              },
              "dependsOn": [
                "[resourceId('Microsoft.ContainerRegistry/registries', parameters('name'))]"
              ]
            }
          ],
          "outputs": {
            "id": {
              "type": "string",
              "value": "[resourceId('Microsoft.ContainerRegistry/registries', parameters('name'))]"
            },
            "loginServer": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.ContainerRegistry/registries', parameters('name')), '2023-11-01-preview').loginServer]"
            },
            "name": {
              "type": "string",
              "value": "[parameters('name')]"
            }
          }
        }
      }
    }
  ],
  "outputs": {
    "defaultDomain": {
      "type": "string",
      "value": "[reference(resourceId('Microsoft.Resources/deployments', format('{0}-container-apps-environment', parameters('name'))), '2022-09-01').outputs.defaultDomain.value]"
    },
    "environmentName": {
      "type": "string",
      "value": "[reference(resourceId('Microsoft.Resources/deployments', format('{0}-container-apps-environment', parameters('name'))), '2022-09-01').outputs.name.value]"
    },
    "environmentId": {
      "type": "string",
      "value": "[reference(resourceId('Microsoft.Resources/deployments', format('{0}-container-apps-environment', parameters('name'))), '2022-09-01').outputs.id.value]"
    },
    "registryLoginServer": {
      "type": "string",
      "value": "[if(empty(parameters('containerRegistryResourceGroupName')), reference(resourceId('Microsoft.Resources/deployments', format('{0}-container-registry', parameters('name'))), '2022-09-01').outputs.loginServer.value, reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, parameters('containerRegistryResourceGroupName')), 'Microsoft.Resources/deployments', format('{0}-container-registry-external', parameters('name'))), '2022-09-01').outputs.loginServer.value)]"
    },
    "registryName": {
      "type": "string",
      "value": "[if(empty(parameters('containerRegistryResourceGroupName')), reference(resourceId('Microsoft.Resources/deployments', format('{0}-container-registry', parameters('name'))), '2022-09-01').outputs.name.value, reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, parameters('containerRegistryResourceGroupName')), 'Microsoft.Resources/deployments', format('{0}-container-registry-external', parameters('name'))), '2022-09-01').outputs.name.value)]"
    }
  }
}